if (CallApduCommand(0x80 ,0xA4 ,0x00 ,0x07, new byte[02] { 0x2A ,0x30}) != 0) {    return -19;  }
if (CallApduCommand(0x80 ,0xDA ,0x01 ,0x6E, new byte[38] { 0x83 ,0x02 ,0x21 ,0x01 ,0x8F ,0x20 ,0xA9 ,0xFB ,0x57 ,0xDB ,0xA1 ,0xEE ,0xA9 ,0xBC ,0x3E ,0x66 ,0x0A ,0x90 ,0x9D ,0x83 ,0x8D ,0x72 ,0x6E ,0x3B ,0xF6 ,0x23 ,0xD5 ,0x26 ,0x20 ,0x28 ,0x20 ,0x13 ,0x48 ,0x1D ,0x1F ,0x6E ,0x53 ,0x77}) != 0) {    return -20;  }
if (CallApduCommand(0x80 ,0xDA ,0x01 ,0x6E, new byte[38] { 0x83 ,0x02 ,0x22 ,0x01 ,0x8F ,0x20 ,0x7D ,0x5A ,0x09 ,0x75 ,0xFC ,0x2C ,0x30 ,0x57 ,0xEE ,0xF6 ,0x75 ,0x30 ,0x41 ,0x7A ,0xFF ,0xE7 ,0xFB ,0x80 ,0x55 ,0xC1 ,0x26 ,0xDC ,0x5C ,0x6C ,0xE9 ,0x4A ,0x4B ,0x44 ,0xF3 ,0x30 ,0xB5 ,0xD9}) != 0) {    return -21;  }
if (CallApduCommand(0x80 ,0xDA ,0x01 ,0x6E, new byte[38] { 0x83 ,0x02 ,0x23 ,0x01 ,0x8F ,0x20 ,0x26 ,0xDC ,0x5C ,0x6C ,0xE9 ,0x4A ,0x4B ,0x44 ,0xF3 ,0x30 ,0xB5 ,0xD9 ,0xBB ,0xD7 ,0x7C ,0xBF ,0x95 ,0x84 ,0x16 ,0x29 ,0x5C ,0xF7 ,0xE1 ,0xCE ,0x6B ,0xCC ,0xDC ,0x18 ,0xFF ,0x8C ,0x07 ,0xB6}) != 0) {    return -22;  }
if (CallApduCommand(0x80 ,0xDA ,0x01 ,0x6E, new byte[71] { 0x83 ,0x02 ,0x24 ,0x01 ,0x8F ,0x41 ,0x04 ,0x8B ,0xD2 ,0xAE ,0xB9 ,0xCB ,0x7E ,0x57 ,0xCB ,0x2C ,0x4B ,0x48 ,0x2F ,0xFC ,0x81 ,0xB7 ,0xAF ,0xB9 ,0xDE ,0x27 ,0xE1 ,0xE3 ,0xBD ,0x23 ,0xC2 ,0x3A ,0x44 ,0x53 ,0xBD ,0x9A ,0xCE ,0x32 ,0x62 ,0x54 ,0x7E ,0xF8 ,0x35 ,0xC3 ,0xDA ,0xC4 ,0xFD ,0x97 ,0xF8 ,0x46 ,0x1A ,0x14 ,0x61 ,0x1D ,0xC9 ,0xC2 ,0x77 ,0x45 ,0x13 ,0x2D ,0xED ,0x8E ,0x54 ,0x5C ,0x1D ,0x54 ,0xC7 ,0x2F ,0x04 ,0x69 ,0x97}) != 0) {    return -23;  }
if (CallApduCommand(0x80 ,0xDA ,0x01 ,0x6E, new byte[38] { 0x83 ,0x02 ,0x25 ,0x01 ,0x8F ,0x20 ,0xA9 ,0xFB ,0x57 ,0xDB ,0xA1 ,0xEE ,0xA9 ,0xBC ,0x3E ,0x66 ,0x0A ,0x90 ,0x9D ,0x83 ,0x8D ,0x71 ,0x8C ,0x39 ,0x7A ,0xA3 ,0xB5 ,0x61 ,0xA6 ,0xF7 ,0x90 ,0x1E ,0x0E ,0x82 ,0x97 ,0x48 ,0x56 ,0xA7}) != 0) {    return -24;  }
if (CallApduCommand(0x80 ,0xDA ,0x01 ,0x6E, new byte[07] { 0x83 ,0x02 ,0x26 ,0x01 ,0x8F ,0x01 ,0x01 }) != 0) {    return -25;  }
if (CallApduCommand(0x80 ,0xDA ,0x01 ,0x6E, new byte[07] { 0x83 ,0x02 ,0x00 ,0x80 ,0x8F ,0x01 ,0x00 }) != 0) {    return -26;  }
if (CallApduCommand(0x80 ,0xDA ,0x01 ,0x6E, new byte[38] { 0x83 ,0x02 ,0x28 ,0x01 ,0x8F ,0x20 ,0x5E ,0xE4 ,0x6A ,0xDD ,0xCC ,0x23 ,0xF3 ,0x7D ,0xFD ,0x08 ,0x78 ,0x7A ,0xD7 ,0x87 ,0x36 ,0x82 ,0xE3 ,0x06 ,0x43 ,0x53 ,0xDA ,0xF7 ,0x54 ,0x62 ,0xCF ,0x83 ,0x2E ,0x18 ,0x74 ,0xF8 ,0x7C ,0xAE}) != 0) {    return -27;  }
if (CallApduCommand(0x80 ,0xA4 ,0x00 ,0x07, new byte[02] { 0x2A ,0xB0 }) != 0) {    return -28;  }
if (CallApduCommand(0x80 ,0xDA ,0x01 ,0x6E, new byte[34] { 0x83 ,0x02 ,0x21 ,0x01 ,0x8F ,0x1C ,0xD7 ,0xC1 ,0x34 ,0xAA ,0x26 ,0x43 ,0x66 ,0x86 ,0x2A ,0x18 ,0x30 ,0x25 ,0x75 ,0xD1 ,0xD7 ,0x87 ,0xB0 ,0x9F ,0x07 ,0x57 ,0x97 ,0xDA ,0x89 ,0xF5 ,0x7E ,0xC8 ,0xC0 ,0xFF}) != 0) {    return -29;  }
if (CallApduCommand(0x80 ,0xDA ,0x01 ,0x6E, new byte[34] { 0x83 ,0x02 ,0x22 ,0x01 ,0x8F ,0x1C ,0x68 ,0xA5 ,0xE6 ,0x2C ,0xA9 ,0xCE ,0x6C ,0x1C ,0x29 ,0x98 ,0x03 ,0xA6 ,0xC1 ,0x53 ,0x0B ,0x51 ,0x4E ,0x18 ,0x2A ,0xD8 ,0xB0 ,0x04 ,0x2A ,0x59 ,0xCA ,0xD2 ,0x9F ,0x43}) != 0) {    return -30;  }
if (CallApduCommand(0x80 ,0xDA ,0x01 ,0x6E, new byte[34] { 0x83 ,0x02 ,0x23 ,0x01 ,0x8F ,0x1C ,0x25 ,0x80 ,0xF6 ,0x3C ,0xCF ,0xE4 ,0x41 ,0x38 ,0x87 ,0x07 ,0x13 ,0xB1 ,0xA9 ,0x23 ,0x69 ,0xE3 ,0x3E ,0x21 ,0x35 ,0xD2 ,0x66 ,0xDB ,0xB3 ,0x72 ,0x38 ,0x6C ,0x40 ,0x0B}) != 0) {    return -31;  }
if (CallApduCommand(0x80 ,0xDA ,0x01 ,0x6E, new byte[63] { 0x83 ,0x02 ,0x24 ,0x01 ,0x8F ,0x39 ,0x04 ,0x0D ,0x90 ,0x29 ,0xAD ,0x2C ,0x7E ,0x5C ,0xF4 ,0x34 ,0x08 ,0x23 ,0xB2 ,0xA8 ,0x7D ,0xC6 ,0x8C ,0x9E ,0x4C ,0xE3 ,0x17 ,0x4C ,0x1E ,0x6E ,0xFD ,0xEE ,0x12 ,0xC0 ,0x7D ,0x58 ,0xAA ,0x56 ,0xF7 ,0x72 ,0xC0 ,0x72 ,0x6F ,0x24 ,0xC6 ,0xB8 ,0x9E ,0x4E ,0xCD ,0xAC ,0x24 ,0x35 ,0x4B ,0x9E ,0x99 ,0xCA ,0xA3 ,0xF6 ,0xD3 ,0x76 ,0x14 ,0x02 ,0xCD}) != 0) {    return -32;  }
if (CallApduCommand(0x80 ,0xDA ,0x01 ,0x6E, new byte[34] { 0x83 ,0x02 ,0x25 ,0x01 ,0x8F ,0x1C ,0xD7 ,0xC1 ,0x34 ,0xAA ,0x26 ,0x43 ,0x66 ,0x86 ,0x2A ,0x18 ,0x30 ,0x25 ,0x75 ,0xD0 ,0xFB ,0x98 ,0xD1 ,0x16 ,0xBC ,0x4B ,0x6D ,0xDE ,0xBC ,0xA3 ,0xA5 ,0xA7 ,0x93 ,0x9F}) != 0) {    return -33;  }
if (CallApduCommand(0x80 ,0xDA ,0x01 ,0x6E, new byte[07] { 0x83 ,0x02 ,0x26 ,0x01 ,0x8F ,0x01 ,0x01 }) != 0) {    return -34;  }
if (CallApduCommand(0x80 ,0xDA ,0x01 ,0x6E, new byte[63] { 0x83 ,0x02 ,0x27 ,0x01 ,0x8F ,0x39 ,0x04 ,0x48 ,0x84 ,0xDA ,0x55 ,0x88 ,0x06 ,0x6F ,0x6B ,0xA1 ,0x05 ,0x60 ,0xC9 ,0x40 ,0x60 ,0xCD ,0xB6 ,0xAB ,0xC6 ,0x20 ,0xD4 ,0x71 ,0x49 ,0x8E ,0xF6 ,0xBC ,0x9C ,0x1A ,0xE6 ,0x48 ,0x98 ,0x73 ,0xE0 ,0x95 ,0xBC ,0xE2 ,0x5A ,0x5C ,0xB7 ,0xF8 ,0xFD ,0x7B ,0x97 ,0xAC ,0x1A ,0x88 ,0xD9 ,0x37 ,0x02 ,0xCC ,0xF6 ,0x18 ,0x52 ,0xEB ,0x9E ,0xCB ,0xAA}) != 0) {    return -35;  }
if (CallApduCommand(0x80 ,0xE2 ,0x00 ,0x01, new byte[03] { 0xDF ,0xBB ,0x25 }) != 0) {    return -36;  }
if (CallApduCommand(0x80 ,0xE2 ,0x00 ,0x02, new byte[17] { 0xDF ,0xB9 ,0x41 ,0x54 ,0x43 ,0x56 ,0x43 ,0x41 ,0x5F ,0x4E ,0x58 ,0x50 ,0x30 ,0x30 ,0x30 ,0x30 ,0x31}) != 0) {    return -37;  }
if (CallApduCommand(0x80 ,0xE2 ,0x00 ,0x03, new byte[06] { 0xDF ,0xBA ,0x3F ,0xFF ,0xFF ,0xFF }) != 0) {    return -38;  }
if (CallApduCommand(0x80 ,0xE2 ,0x00 ,0x04, new byte[08] { 0xDF ,0xBD ,0x01 ,0x08 ,0x00 ,0x06 ,0x02 ,0x04}) != 0) {    return -39;  }
if (CallApduCommand(0x80 ,0xE2 ,0x00 ,0x05, new byte[12] { 0xDF ,0x11 ,0x31 ,0x32 ,0x33 ,0x34 ,0x35 ,0x36 ,0x37 ,0x38 ,0x39 ,0x58 }) != 0) {    return -40;  }
if (CallApduCommand(0x80 ,0xE2 ,0x00 ,0x06, new byte[08] { 0xDF ,0x12 ,0x01 ,0x05 ,0x00 ,0x06 ,0x02 ,0x03 }) != 0) {    return -41;  }

{ 0x54, 0x01, 0x00, 0x53, 0x81, 0xD6, 0x55, 0x32, 0x4F, 0x5F, 0x1F, 0x7F, 0x0F, 0x53, 0x6D, 0x69, 0x74, 0x68, 0x65, 0x2D, 0x57, 0x69, 0x6C, 0x6C, 0x69, 0x61, 0x6D, 0x73, 0x17, 0x41, 0x6C, 0x65, 0x78, 0x61, 0x6E, 0x64, 0x65, 0x72, 0x20, 0x47, 0x65, 0x6F, 0x72, 0x67, 0x65, 0x20, 0x54, 0x68, 0x6F, 0x6D, 0x61, 0x73, 0x19, 0x70, 0x03, 0x01, 0x20, 0x02, 0x09, 0x15, 0x20, 0x07, 0x09, 0x30, 0x4A, 0x50, 0x4E, 0x3C, 0x48, 0x4F, 0x4B, 0x4B, 0x41, 0x49, 0x44, 0x4F, 0x20, 0x50, 0x52, 0x45, 0x46, 0x45, 0x43, 0x54, 0x55, 0x52, 0x41, 0x4C, 0x20, 0x50, 0x4F, 0x4C, 0x49, 0x43, 0x45, 0x20, 0x41, 0x53, 0x41, 0x48, 0x49, 0x4B, 0x41, 0x57, 0x41, 0x20, 0x41, 0x52, 0x45, 0x41, 0x20, 0x53, 0x41, 0x46, 0x45, 0x54, 0x59, 0x20, 0x43, 0x4F, 0x4D, 0x4D, 0x49, 0x53, 0x53, 0x49, 0x4F, 0x4E, 0x0A, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x58, 0x7F, 0x63, 0x4E, 0x02, 0x01, 0x04, 0x87, 0x18, 0x41, 0x31, 0x3B, 0x19, 0x90, 0x11, 0x23, 0x3B, 0x20, 0x13, 0x06, 0x15, 0x3B, 0x53, 0x30, 0x33, 0x3B, 0x3C, 0x3D, 0x3B, 0x30, 0x32, 0x35, 0x30, 0x87, 0x18, 0x43, 0x31, 0x3B, 0x20, 0x00, 0x03, 0x15, 0x3B, 0x20, 0x10, 0x03, 0x14, 0x3B, 0x53, 0x30, 0x31, 0x3B, 0x3C, 0x3D, 0x3B, 0x38, 0x30, 0x30, 0x30, 0x87, 0x09, 0x43, 0x31, 0x3B, 0x3B, 0x3B, 0x37, 0x38, 0x3B, 0x3B, 0x87, 0x0A, 0x41, 0x4C, 0x4C, 0x3B, 0x3B, 0x3B, 0x30, 0x31, 0x3B, 0x3B }


{ 0x54, 0x01, 0x00, 0x53, 0x81, 0xD6, 0x61, 0x81, 0xD3, 0x5F, 0x1F, 0x7F, 0x0F, 0x53, 0x6D, 0x69, 0x74, 0x68, 0x65, 0x2D, 0x57, 0x69, 0x6C, 0x6C, 0x69, 0x61, 0x6D, 0x73, 0x17, 0x41, 0x6C, 0x65, 0x78, 0x61, 0x6E, 0x64, 0x65, 0x72, 0x20, 0x47, 0x65, 0x6F, 0x72, 0x67, 0x65, 0x20, 0x54, 0x68, 0x6F, 0x6D, 0x61, 0x73, 0x19, 0x70, 0x03, 0x01, 0x20, 0x02, 0x09, 0x15, 0x20, 0x07, 0x09, 0x30, 0x4A, 0x50, 0x4E, 0x3C, 0x48, 0x4F, 0x4B, 0x4B, 0x41, 0x49, 0x44, 0x4F, 0x20, 0x50, 0x52, 0x45, 0x46, 0x45, 0x43, 0x54, 0x55, 0x52, 0x41, 0x4C, 0x20, 0x50, 0x4F, 0x4C, 0x49, 0x43, 0x45, 0x20, 0x41, 0x53, 0x41, 0x48, 0x49, 0x4B, 0x41, 0x57, 0x41, 0x20, 0x41, 0x52, 0x45, 0x41, 0x20, 0x53, 0x41, 0x46, 0x45, 0x54, 0x59, 0x20, 0x43, 0x4F, 0x4D, 0x4D, 0x49, 0x53, 0x53, 0x49, 0x4F, 0x4E, 0x0A, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x58, 0x7F, 0x63, 0x4E, 0x02, 0x01, 0x04, 0x87, 0x18, 0x41, 0x31, 0x3B, 0x19, 0x90, 0x11, 0x23, 0x3B, 0x20, 0x13, 0x06, 0x15, 0x3B, 0x53, 0x30, 0x33, 0x3B, 0x3C, 0x3D, 0x3B, 0x30, 0x32, 0x35, 0x30, 0x87, 0x18, 0x43, 0x31, 0x3B, 0x20, 0x00, 0x03, 0x15, 0x3B, 0x20, 0x10, 0x03, 0x14, 0x3B, 0x53, 0x30, 0x31, 0x3B, 0x3C, 0x3D, 0x3B, 0x38, 0x30, 0x30, 0x30, 0x87, 0x09, 0x43, 0x31, 0x3B, 0x3B, 0x3B, 0x37, 0x38, 0x3B, 0x3B, 0x87, 0x0A, 0x41, 0x4C, 0x4C, 0x3B, 0x3B, 0x3B, 0x30, 0x31, 0x3B, 0x3B }